1. Использовать gem ActiveInteraction => https://github.com/AaronLasseigne/active_interaction отрефакторить класс Users::Create 

Сделано путь к файлу:
./CustomerFeature/app/interactions/users/create_user.rb

2. Исправить опечатку Skil. Есть 2 пути решения. Описать оба.

Возможно, имеется даже три пути:

Путь 1. 
Переименовать файл модели и название класса Skil -> Skill. Создать новую миграцию по переименованию в БД и запустить её
   rails generate migration RenameSkilToSkill
Рефокторить код, где использовалось предыдущее название Skil и заменить Skill
Путь 2. 
Удалить (предварительно сохранив логику) файл текущей модели и миграцию. Сгенерировать модель заново (скопировать туда сохраненную логику, если была), дропнуть и создать БД и запустить все миграции заново. Рефокторить код, где использовалось предыдущее название Skil
Путь 3.
В БД из консоли переименовать таблицу. Исправить файл миграции где создавалась таблица. И поправить файл с моделью.
Рефокторить код, где использовалось предыдущее название Skil. Сгенерировать заново схему 
rails db:schema:dump   

3. Исправить связи
Исправил has_many на has_and_belongs_to_many

4. Поднять Rails приложение и в нем использовать класс Users::Create

Проект архива скинул CustomerFeature.rar

5. Написать тесты

Тесты написал, путь к файлу 
./CustomerFeature/spec/interactions/create_user_spec.rb

6. При рефакторинге кода использовать Декларативное описание(подход в программировании)

Путь к файлу после рефоакторинга: ./CustomerFeature/app/interactions/users/create_user.rb
Выполнил следующие шаги:

6.1 Вынес проверку передаваемых параметров в фильтры ActiveInteraction
6.2 Для выполнения условий по передаваемым параметрам добавил валидацию ActiveInteraction и приватный метод check_params, который в зависимости при невыполнении условий генерит ошибку
6.3 Сохранение пользователя перенес в одну транзакцию и в качестве результата возвращаю добавленного User
